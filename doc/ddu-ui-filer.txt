*ddu-ui-filer.txt*	File listing UI for ddu.vim

Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS                                               *ddu-ui-filer-contents*

Introduction		|ddu-ui-filer-introduction|
Install			|ddu-ui-filer-install|
Interface		|ddu-ui-filer-interface|
  Functions		  |ddu-ui-filer-functions|
  Actions		  |ddu-ui-filer-actions|
  Params		  |ddu-ui-filer-params|
  Params expression	  |ddu-ui-filer-params-expression|
Examples		|ddu-ui-filer-examples|
FAQ			|ddu-ui-filer-faq|
Compatibility		|ddu-ui-filer-compatibility|


==============================================================================
INTRODUCTION                                       *ddu-ui-filer-introduction*

This UI is standard file explorer.


==============================================================================
INSTALL                                                 *ddu-ui-filer-install*

Please install both "ddu.vim" and "denops.vim".

https://github.com/Shougo/ddu.vim
https://github.com/vim-denops/denops.vim

Because of the use of the "gio" command, `desktop-file-utils` should be
installed on macOS. >

	$ brew install desktop-file-utils

==============================================================================
INTERFACE                                             *ddu-ui-filer-interface*


------------------------------------------------------------------------------
FUNCTIONS                                             *ddu-ui-filer-functions*

                                                    *ddu#ui#filer#do_action()*
ddu#ui#filer#do_action({action-name}[, {params}])
		It is deprecated.  Please use |ddu#ui#do_action()| instead.

                                                *ddu#ui#filer#multi_actions()*
ddu#ui#filer#multi_actions([{action-name1}[, {params1}], ...])
		It is deprecated.  Please use |ddu#ui#multi_actions()|
		instead.


------------------------------------------------------------------------------
ACTIONS                                                 *ddu-ui-filer-actions*

                                              *ddu-ui-filer-action-checkItems*
checkItems
		Check the items are updated.
		NOTE: Source support is needed for the feature.

                                            *ddu-ui-filer-action-chooseAction*
chooseAction
		Choose and fire the action.

		NOTE: "ddu-source-action" is required.
		https://github.com/Shougo/ddu-source-action

                                     *ddu-ui-filer-action-clearSelectAllItems*
clearSelectAllItems
		Clear all selected items.

                                      *ddu-ui-filer-action-closePreviewWindow*
closePreviewWindow
		Close the preview window.

                                            *ddu-ui-filer-action-collapseItem*
collapseItem
		Collapse the item tree.

                                              *ddu-ui-filer-action-cursorNext*
cursorNext
		params:
			{count}: Move count

		Move the cursor to the next.

                                          *ddu-ui-filer-action-cursorPrevious*
cursorPrevious
		params:
			{count}: Move count

		Move the cursor to the previous.

                                              *ddu-ui-filer-action-expandItem*
expandItem
		params:
			{mode}: The supported values are:

				"toggle":
					Close the item tree if the directory
					is opened.

			{maxLevel}:
				Maximum expand recursive level.
				If it is less than 0, infinite recursive.

		Expand the item tree.

                                                 *ddu-ui-filer-action-getItem*
getItem
		Set current item to "b:ddu_ui_item" variable.

                                        *ddu-ui-filer-action-getSelectedItems*
getSelectedItems
		Set selected items to "b:ddu_ui_selected_items" variable.

                                             *ddu-ui-filer-action-inputAction*
inputAction
		Choose and fire the action by |input()|.

                                              *ddu-ui-filer-action-itemAction*
itemAction
		params:
			{name}: Action name
			{params}: Action params dictionary

		Close the UI window and fire {name} action for selected or
		current cursor items.
		You can find the actions list in item's kind documentation.
		If {name} is empty, "default" will be used.

		NOTE: You cannot mix multiple kinds/sources.

                                                 *ddu-ui-filer-action-preview*
preview
		params:
			{syntaxLimitChars}: 	Max number of chars to apply
						'syntax' and 'filetype' to
						previewed contents.
						(Default: 400000)

			The remaining params are passed to |ddu-kinds|.
			See also |ddu-kind-attribute-getPreviewer| and kinds
			documentation.

		Preview the item in preview window.

                                          *ddu-ui-filer-action-toggleAllItems*
toggleAllItems
		Toggle selected state for the all items.

                                           *ddu-ui-filer-action-togglePreview*
togglePreview
		Toggle |ddu-ui-filer-action-preview| for cursor item.

                                        *ddu-ui-filer-action-toggleSelectItem*
toggleSelectItem
		Toggle selected item.

                                           *ddu-ui-filer-action-updateOptions*
updateOptions
		params:
			{option-name}: Option name and value

		Update current options and redraw the UI.
		Refer to |ddu-options| about options.


==============================================================================
PARAMS                                                   *ddu-ui-filer-params*

                                              *ddu-ui-filer-param-displayRoot*
displayRoot	(boolean)
		Display source root item.
		It shows source path.

		Default: v:true

                                               *ddu-ui-filer-param-exprParams*
exprParams	(string[])
		Evaluate params list.
		If the param is string, it is evaluated as
		|ddu-ui-filer-params-expression|.

		Default: [
		  "previewCol",
		  "previewRow",
		  "previewHeight",
		  "previewWidth",
		  "winCol",
		  "winRow",
		  "winHeight",
		  "winWidth",
		]

                                           *ddu-ui-filer-param-floatingBorder*
floatingBorder	(string | list)
		Specify the style of the window border if
		|ddu-ui-filer-param-split| is "floating".
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: "none"

                                            *ddu-ui-filer-param-floatingTitle*
floatingTitle		(string | list)
		Specify the title of the window border if
		|ddu-ui-filer-param-floatingBorder| is not "none".
		NOTE: It is neovim only.

		Default: ""

                                         *ddu-ui-filer-param-floatingTitlePos*
floatingTitlePos	(string)
		Specify the title position of the window border if
		|ddu-ui-filer-param-floatingBorder| is not "none".
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: "left"

                                                    *ddu-ui-filer-param-focus*
focus		(boolean)
		Focus on the UI window after opening the UI window.

		Default: v:true

                                               *ddu-ui-filer-param-highlights*
highlights	(dictionary)
		It specifies ddu-ui-filer buffer highlights.
		It can contain following keys

		floating			(string)
		Specify floating window background highlight.
		Default: "NormalFloat"

		floatingBorder			(string)
		Specify border highlight of flowing window
		Default: "FloatBorder"

		selected			(string)
		Specify selected item highlight.
		Default: "Statement"

		sourceName			(string)
		Specify source name highlight.
		Default: "Type"

		sourcePath			(string)
		Specify source path highlight.
		Default: "String"

		Default: {}

                                                *ddu-ui-filer-param-onPreview*
onPreview	(function)
		It is called when |ddu-ui-filer-action-preview| is fired.
		NOTE: The function must be registered by
		|denops#callback#register()|.

                                               *ddu-ui-filer-param-previewCol*
previewCol	(number)
		Set the column position of the preview window if
		|ddu-ui-filer-param-previewFloating| is v:true.

		Default: 0

                                          *ddu-ui-filer-param-previewFloating*
previewFloating	(boolean)
		Use floating window in |ddu-ui-filer-action-preview|.

		Default: v:false

                                    *ddu-ui-filer-param-previewFloatingBorder*
previewFloatingBorder		(string | list)
		Specify the style of the preview window border if
		|ddu-ui-filer-param-previewFloating| is v:true.
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: "none"

                                     *ddu-ui-filer-param-previewFloatingTitle*
previewFloatingTitle	(string | list)
		Specify the title of the preview floating window with border
		if |ddu-ui-filer-param-previewFloatingBorder| is not "none".

		Default: ""

                                  *ddu-ui-filer-param-previewFloatingTitlePos*
previewFloatingTitlePos	(string)
		Specify the title position of the preview floating window with
		border if |ddu-ui-filer-param-previewFloatingBorder| is not
		"none".

		Default: "left"

                                    *ddu-ui-filer-param-previewFloatingZindex*
previewFloatingZindex		(number)
		Specify the style of the preview window zindex if
		|ddu-ui-filer-param-split| is "floating".
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: 100

                                            *ddu-ui-filer-param-previewHeight*
previewHeight	(number)
		Set the height of the |preview-window| in
		|ddu-ui-filer-action-preview|.
		If |ddu-ui-filer-param-previewFloating|, set the height of the
		floating window.

		Default: 10

                                               *ddu-ui-filer-param-previewRow*
previewRow	(number)
		Set the row position of the preview window if
		|ddu-ui-filer-param-previewFloating| is v:true.

		Default: 0

                                             *ddu-ui-filer-param-previewSplit*
previewSplit	(string)
		Specify preview split mode in |ddu-ui-filer-action-preview|.

		Following values are available:

		"horizontal": horizontal split
		"vertical": vertical split
		"no": no split

		Default: "horizontal"

                                             *ddu-ui-filer-param-previewWidth*
previewWidth	(number)
		Set the width of the |preview-window| in
		|ddu-ui-filer-action-preview|.
		If |ddu-ui-filer-param-previewFloating|, set the width of the
		floating window.

		Default: 80

                                     *ddu-ui-filer-param-previewWindowOptions*
previewWindowOptions	(list)
		Set the window options of the |preview-window| in
		|ddu-ui-filer-action-preview|.
		If |ddu-ui-filer-param-previewFloating| is set, set the
		options of the floating window.
		See |options| for the detail.
		NOTE: The options are applied in the array order.

		Default:

		[
			["&signcolumn", "no"],
			["&foldcolumn", 0],
			["&foldenable", 0],
			["&number", 0],
			["&wrap", 0],
		]

                                                    *ddu-ui-filer-param-split*
split		(string)
		Specify split mode.

		Following values are available:

		"horizontal": horizontal split
		"vertical": vertical split
		"floating": use neovim floating window feature
		"no": no split

		Default: "horizontal"

                                                     *ddu-ui-filer-param-sort*
sort		(string)

		Sort method.
		If the method is upper case, the order will be reversed.

		NOTE: To sort items properly, the source must support
		|ddu-item-attribute-status|.

		"extension": file extension sort
		"filename": file name sort
		"size": file size sort
		"time": file modified time sort
		"none": disabled

		Default: "none"

                                           *ddu-ui-filer-param-sortTreesFirst*
sortTreesFirst	(boolean)
		Sort trees in the first than non tree items.

		Default: v:false

                                           *ddu-ui-filer-param-splitDirection*
splitDirection	(string)
		Specify split direction.

		Default: "belowright"

                                               *ddu-ui-filer-param-statusline*
statusline	(boolean)
		If it is true, the original 'statusline' value is set on the
		buffer.

		Default: v:true

                                                   *ddu-ui-filer-param-winCol*
winCol		(number | string)
		Set the column position of the window if
		|ddu-ui-filer-param-split| is "floating".

		Default: "(&columns - eval(uiParams.winWidth)) / 2"

                                                *ddu-ui-filer-param-winHeight*
winHeight	(number | string)
		Set the height of the window if |ddu-ui-filer-param-split| is
		"horizontal".
		if |ddu-ui-filer-param-split| is "floating",
		set the height of the floating window.

		Default: 20

                                                   *ddu-ui-filer-param-winRow*
winRow		(number | string)
		Set the row position of the window if
		|ddu-ui-filer-param-split| is "floating".

		Default: "&lines / 2 - 10"

                                                 *ddu-ui-filer-param-winwidth*
winWidth	(number | string)
		Set the width of the window if |ddu-ui-filer-param-split| is
		"vertical".
		if |ddu-ui-filer-param-split| is "floating", set the width of
		the floating window.

		Default: "&columns / 2"


==============================================================================
PARAMS EXPRESSION			*ddu-ui-filer-params-expression*

If the parameter value is a string, it can be evaluated as a Vim |expression|.
Expressions must not have side effects.  The following variables exist in the
expression context:

	bufName		(string)
	bufNr		(number)
	itemCount	(number)
	sources		(string[])
	uiParams	(|ddu-ui-filer-params|)
	winId		(number)

An example of floating the UI window on the left side and the preview window
on the right side of the screen: >

	call ddu#custom#patch_global(#{
	    \   ui: 'filer',
	    \   uiParams: #{
	    \     filer: #{
	    \       split: 'floating',
	    \       winHeight: '&lines - 8',
	    \       winWidth: '&columns / 2 - 2',
	    \       winRow: 1,
	    \       winCol: 1,
	    \       previewFloating: v:true,
	    \       previewHeight: '&lines - 8',
	    \       previewWidth: '&columns / 2 - 2',
	    \       previewRow: 1,
	    \       previewCol: '&columns / 2 + 1',
	    \     }
	    \   },
	    \ })
<

==============================================================================
EXAMPLES                                               *ddu-ui-filer-examples*
>
	call ddu#custom#patch_global(#{
	    \   ui: 'filer',
	    \   actionOptions: #{
	    \     narrow: #{
	    \       quit: v:false,
	    \     },
	    \   },
	    \ })

	autocmd FileType ddu-filer call s:ddu_filer_my_settings()
	function s:ddu_filer_my_settings() abort
	  nnoremap <buffer> <CR>
	  \ <Cmd>call ddu#ui#do_action('itemAction')<CR>
	  nnoremap <buffer> o
	  \ <Cmd>call ddu#ui#do_action('expandItem')<CR>
	endfunction
<

==============================================================================
FREQUENTLY ASKED QUESTIONS (FAQ)			*ddu-ui-filer-faq*

FAQ 1:							|ddu-ui-filer-faq-1|
	I want to toggle hidden files by mappings.

FAQ 2:							|ddu-ui-filer-faq-2|
	I want to check updated items automatically.

FAQ 3:							|ddu-ui-filer-faq-3|
	I want to use icon fonts in ddu columns.

FAQ 4:							|ddu-ui-filer-faq-4|
	Flickering when moving directories using narrow action.

FAQ 5:							|ddu-ui-filer-faq-5|
	I want to use existing buffer to show preview.

FAQ 6:							|ddu-ui-filer-faq-6|
	I want to check the current item is tree.


------------------------------------------------------------------------------
                                                          *ddu-ui-filer-faq-1*
Q: I want to toggle hidden files by mappings.

A: >
	nnoremap <buffer> >
	\ <Cmd>call ddu#ui#do_action('updateOptions', {
	\   'sourceOptions': {
	\     '_': {
	\       'matchers': ToggleHidden(),
	\     },
	\   },
	\ })<CR>
	
	function ToggleHidden()
	  const current = ddu#custom#get_current(b:ddu_ui_name)
	  const source_options = get(current, 'sourceOptions', {})
	  const source_options_all = get(source_options, '_', {})
	  const matchers = get(source_options_all, 'matchers', [])
	  return empty(matchers) ? ['matcher_hidden'] : []
	endfunction
<

                                                          *ddu-ui-filer-faq-2*
Q: I want to check updated items automatically.

A: >
	autocmd TabEnter,WinEnter,CursorHold,FocusGained *
	\ call ddu#ui#do_action('checkItems')

NOTE: Source support is needed for |ddu-ui-filer-action-checkItems|.

                                                          *ddu-ui-filer-faq-3*
Q: I want to use icon fonts in ddu columns.

A: You can use "ddu-column-icon_filename".

https://github.com/ryota2357/ddu-column-icon_filename

                                                          *ddu-ui-filer-faq-4*
Q: Flickering when moving directories using narrow action.

A: You need to set |ddu-action-option-quit| for narrow action. >
	
	call ddu#custom#patch_global(#{
	    \   ui: 'filer',
	    \   actionOptions: #{
	    \     narrow: #{
	    \       quit: v:false,
	    \     },
	    \   },
	    \ })
<

                                                          *ddu-ui-filer-faq-5*
Q: I want to use existing buffer to show preview.

A: Please use "no" in |ddu-ui-filer-param-previewSplit|.

                                                          *ddu-ui-filer-faq-6*
Q: I want to check the current item is tree.

A: >
	nnoremap <buffer><expr> <CR>
	\ ddu#ui#get_item()->get('isTree', v:false) ?
	\ "<Cmd>call ddu#ui#do_action('itemAction',
	\  {'name': 'narrow'})<CR>" :
	\ "<Cmd>call ddu#ui#do_action('itemAction',
	\  {'name': 'open'})<CR>"


==============================================================================
COMPATIBILITY                                     *ddu-ui-filer-compatibility*

2023.07.12
* "preview" action does not toggle.

2023.03.19
* Remove "ddu#ui#filer#get_item" and "ddu#ui#filer#is_tree()".  Please use
  "ddu#ui#get_item()" instead.

2023.02.15
* Remove "previewVertical".  Please use "previewSplit" instead.

2023.01.10
* "ddu-ui-filer-param-search" is removed.  Please use "ddu-option-searchPath"
  instead.

2022.11.18
* Require neovim 0.8.

2022.10.31
* Rename "directory" to "tree".
* Change "ddu-ui-filer-param-sort" and "ddu-ui-filer-param-sortTreesFirst"
  default value.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
