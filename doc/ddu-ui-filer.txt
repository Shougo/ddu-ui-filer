*ddu-ui-filer.txt*	File listing UI for ddu.vim

Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS					*ddu-ui-filer-contents*

Introduction		|ddu-ui-filer-introduction|
Install			|ddu-ui-filer-install|
Interface		|ddu-ui-filer-interface|
  Functions		  |ddu-ui-filer-functions|
  Actions		  |ddu-ui-filer-actions|
  Params		  |ddu-ui-filer-params|
Examples		|ddu-ui-filer-examples|
FAQ			|ddu-ui-filer-faq|
Compatibility		|ddu-ui-filer-compatibility|


==============================================================================
INTRODUCTION					*ddu-ui-filer-introduction*

This UI is standard file explorer.


==============================================================================
INSTALL						*ddu-ui-filer-install*

Please install both "ddu.vim" and "denops.vim".

https://github.com/Shougo/ddu.vim
https://github.com/vim-denops/denops.vim

Because of the use of the "gio" command, `desktop-file-utils` should be
installed on macOS. >

	$ brew install desktop-file-utils

==============================================================================
INTERFACE					*ddu-ui-filer-interface*


------------------------------------------------------------------------------
FUNCTIONS					*ddu-ui-filer-functions*

						*ddu#ui#filer#do_action()*
ddu#ui#filer#do_action({action-name}[, {params}])
		Fire {action-name} action with {params}.  You can find the
		actions list in |ddu-ui-filer-actions|.
		{args} behavior depends on {action-name}.

						*ddu#ui#filer#multi_actions()*
ddu#ui#filer#multi_actions([{action-name1}[, {params1}], ...])
		Fire multiple actions.

		Example: >

		nnoremap <buffer> c
		\ <Cmd>call ddu#ui#filer#multi_actions([
		\ ['itemAction', {'name': 'copy'}],
		\ ['clearSelectAllItems'],
		\ ])<CR>
<
						*ddu#ui#filer#get_item()*
ddu#ui#filer#get_item()
		Return the current cursor item as |Dictionary|.

						*ddu#ui#filer#is_directory()*
ddu#ui#filer#is_directory()
		Return |v:true| if the current cursor item is directory.

		Example: >

		nnoremap <buffer><expr> <CR>
		\ ddu#ui#filer#is_directory() ?
		\ "<Cmd>call ddu#ui#filer#do_action('itemAction',
		\  {'name': 'narrow'})<CR>" :
		\ "<Cmd>call ddu#ui#filer#do_action('itemAction',
		\  {'name': 'open'})<CR>"


------------------------------------------------------------------------------
ACTIONS						*ddu-ui-filer-actions*

					*ddu-ui-filer-action-checkItems*
checkItems
		Check the items are updated.
		Note: Source support is needed for the feature.

					*ddu-ui-filer-action-chooseAction*
chooseAction
		Choose and fire the action.

		Note: "ddu-source-action" is required.
		https://github.com/Shougo/ddu-source-action

				*ddu-ui-filer-action-clearSelectAllItems*
clearSelectAllItems
		Clear all selected items.

					*ddu-ui-filer-action-collapseItem*
collapseItem
		Collapse the item tree.

					*ddu-ui-filer-action-expandItem*
expandItem
		Expand the item tree.
		mode:
			{mode}: The supported values are:

			"toggle":
				Close the item tree if the directory is
				opened.

		maxLevel:
			Maximum expand recursive level.
			If it is less than 0, infinite recursive.

					*ddu-ui-filer-action-itemAction*
itemAction
		params:
			{name}: action name
			{params}: action params dictionary

		Close the UI window and fire {name} action for items.
		You can find the actions list in item's kind documentation.
		If {name} is empty, "default" will be used.

		Note: You cannot mix multiple kinds/sources.

					*ddu-ui-filer-action-toggleAllItems*
toggleAllItems
		Toggle selected state for the all items.

					*ddu-ui-filer-action-toggleSelectItem*
toggleSelectItem
		Toggle selected item.

					*ddu-ui-filer-action-updateOptions*
updateOptions
		params:
			{option-name}: option name and value

		Update current options and redraw the UI.
		Refer to |ddu-options| about options.


==============================================================================
PARAMS						*ddu-ui-filer-params*

				    		*ddu-ui-filer-param-focus*
focus		(boolean)
		Focus on the UI window after opening the UI window.

		Default: v:true

				    	*ddu-ui-filer-param-highlights*
highlights	(dictionary)
		It specifies ddu-ui-filer buffer highlights.
		It can contain following keys

		floating			(string)
		Specify floating window background highlight.
		Default: "NormalFloat"

		selected			(string)
		Specify selected item highlight.
		Default: "Statement"

		sourceName			(string)
		Specify source name highlight.
		Default: "Type"

		sourcePath			(string)
		Specify source path highlight.
		Default: "String"

		Default: {}

				    		*ddu-ui-filer-param-search*
search		(string)
		Search the path.
		Note: If the path is not found, expand the parent tree
		automatically.
		Note: If the path must be absolute path.

		Default: ""

				    		*ddu-ui-filer-param-split*
split		(string)
		Specify split mode. Following values are available:

		"horizontal": horizontal split
		"vertical": vertical split
		"floating": use neovim floating window feature
		"no": no split

		Default: "horizontal"

				    		*ddu-ui-filer-param-sort*
sort		(string)

		Sort method.
		If the method is upper case, the order will be reversed.

		Note: To sort items properly, the source must support
		|ddu-item-attribute-status|.

		"extension": file extension sort
		"filename": file name sort
		"size": file size sort
		"time": file modified time sort
		"none": disabled

		Default: "filename"

				    *ddu-ui-filer-param-sortDirectoriesFirst*
sortDirectoriesFirst	(boolean)
		Sort directories in the first than files.

		Default : v:true

				    	*ddu-ui-filer-param-splitDirection*
splitDirection	(string)
		Specify split direction.

		Default: "botright"

						*ddu-ui-filer-param-winCol*
winCol		(number)
		Set the column position of the window if
		|ddu-ui-filer-param-split| is "floating".

		Default: &columns / 4

						*ddu-ui-filer-param-winHeight*
winHeight	(number)
		Set the height of the window if |ddu-ui-filer-param-split| is
		"horizontal".
		if |ddu-ui-filer-param-split| is "floating",
		set the height of the floating window.

		Default: 20

						*ddu-ui-filer-param-winRow*
winRow		(number)
		Set the row position of the window if
		|ddu-ui-filer-param-split| is "floating".

		Default: &lines / 2 - 10

						*ddu-ui-filer-param-winwidth*
winWidth	(number)
		Set the width of the window if |ddu-ui-filer-param-split| is
		"vertical".
		if |ddu-ui-filer-param-split| is "floating", set the width of
		the floating window.

		Default: &columns / 2


==============================================================================
EXAMPLES					*ddu-ui-filer-examples*
>
	call ddu#custom#patch_global({
	    \   'ui': 'filer',
	    \   'actionOptions': {
	    \     'narrow': {
	    \       'quit': v:false,
	    \     },
	    \   },
	    \ })

	autocmd FileType ddu-filer call s:ddu_filer_my_settings()
	function! s:ddu_filer_my_settings() abort
	  nnoremap <buffer> <CR>
	  \ <Cmd>call ddu#ui#filer#do_action('itemAction')<CR>
	  nnoremap <buffer> o
	  \ <Cmd>call ddu#ui#filer#do_action('expandItem')<CR>
	endfunction


==============================================================================
FREQUENTLY ASKED QUESTIONS (FAQ)			*ddu-ui-filer-faq*

Q: I want to toggle hidden files by mappings.

A: >
	nnoremap <buffer> >
	\ <Cmd>call ddu#ui#filer#do_action('updateOptions', {
	\   'sourceOptions': {
	\     '_': {
	\       'matchers': ToggleHidden(),
	\     },
	\   },
	\ })<CR>
	
	function! ToggleHidden()
	  let current = ddu#custom#get_current(b:ddu_ui_name)
	  let source_options = get(current, 'sourceOptions', {})
	  let source_options_all = get(source_options, '_', {})
	  let matchers = get(source_options_all, 'matchers', [])
	  return empty(matchers) ? ['matcher_hidden'] : []
	endfunction

Q: I want to check updated items automatically.

A: >
	autocmd TabEnter,WinEnter,CursorHold,FocusGained *
	\ call ddu#ui#filer#do_action('checkItems')

Note: Source support is needed for |ddu-ui-filer-action-checkItems|.

Q: I want to use icon fonts in ddu columns.

A: You can use "ddu-column-icon_filename".

https://github.com/ryota2357/ddu-column-icon_filename

==============================================================================
COMPATIBILITY					*ddu-ui-filer-compatibility*

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
